$date
	Sun Jul 27 20:21:21 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module ALU_tb $end
$var wire 1 ! zero $end
$var wire 8 " result [7:0] $end
$var wire 1 # overflow $end
$var wire 1 $ carry $end
$var reg 8 % a [7:0] $end
$var reg 8 & b [7:0] $end
$var reg 3 ' opCode [2:0] $end
$scope module uut $end
$var wire 8 ( a [7:0] $end
$var wire 8 ) b [7:0] $end
$var wire 4 * opCode [3:0] $end
$var reg 1 $ carry $end
$var reg 1 # overflow $end
$var reg 8 + result [7:0] $end
$var reg 9 , temp_sum [8:0] $end
$var reg 1 ! zero $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
b11 ,
b11 +
b0 *
b10 )
b1 (
b0 '
b10 &
b1 %
0$
0#
b11 "
0!
$end
#10
1!
b0 "
b0 +
b0 ,
b0 &
b0 )
b0 %
b0 (
#20
0!
b11111111 "
b11111111 +
b11111111 ,
b11111111 %
b11111111 (
#30
1!
1$
b0 "
b0 +
b100000000 ,
b1 &
b1 )
#40
1#
0!
0$
b10000000 "
b10000000 +
b10000000 ,
b1111111 %
b1111111 (
#50
0#
1$
b110000000 ,
b11000000 &
b11000000 )
b11000000 %
b11000000 (
#60
1!
b0 "
b0 +
b100000000 ,
b11001110 &
b11001110 )
b110010 %
b110010 (
#70
0!
b100 "
b100 +
b100000100 ,
b111100 &
b111100 )
b11001000 %
b11001000 (
#80
b111 "
b111 +
b11 &
b11 )
b1010 %
b1010 (
b1 *
b1 '
#90
1!
b0 "
b0 +
b1001101 &
b1001101 )
b1001101 %
b1001101 (
#100
0!
0$
b11111011 "
b11111011 +
b1010 &
b1010 )
b101 %
b101 (
#110
1#
1$
b1111111 "
b1111111 +
b1 &
b1 )
b10000000 %
b10000000 (
#120
0$
b10000000 "
b10000000 +
b11111111 &
b11111111 )
b1111111 %
b1111111 (
#130
b10011100 "
b10011100 +
b11001000 &
b11001000 )
b1100100 %
b1100100 (
#140
1$
b1100100 "
b1100100 +
b1100100 &
b1100100 )
b11001000 %
b11001000 (
#150
0#
0$
b1 "
b1 +
b11111111 &
b11111111 )
b0 %
b0 (
#160
